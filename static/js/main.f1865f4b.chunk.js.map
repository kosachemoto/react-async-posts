{"version":3,"sources":["actions/index.js","services/post/post.js","services/index.js","actions/comment/index.js","actions/state/state.action.js","actions/state/index.js","actions/post/post.action.js","actions/post/index.js","actions/user/user.action.js","actions/user/index.js","assets/svg sync /^/.//.*/.svg$","assets/svg/home.svg","assets/svg/plus.svg","assets/svg/refresh.svg","assets/svg/stop.svg","serviceWorker.js","reducers/state/state.reducer.js","reducers/posts/posts.reducer.js","reducers/users/users.reducer.js","containers/control-panel/control-panel.jsx","containers/post-detail/post-detail.jsx","containers/post-list/post-list.jsx","components/app/app.jsx","components/author/author.jsx","components/button/button.jsx","components/comment/comment.jsx","components/comment-list/comment-list.jsx","components/error-message/error-message.jsx","components/master-panel/master-panel.jsx","components/post/post.jsx","components/post-preview/post-preview.jsx","index.js","localStorage.js","components/root/root.jsx"],"names":["_state__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d","__webpack_exports__","_post__WEBPACK_IMPORTED_MODULE_1__","_user__WEBPACK_IMPORTED_MODULE_2__","_comment__WEBPACK_IMPORTED_MODULE_3__","o","url","Post","posts","loaded","post","postId","Promise","resolve","reject","fetch","concat","then","response","ok","json","Error","status","user","userId","_comment_action__WEBPACK_IMPORTED_MODULE_0__","RESET_STATE","POSTS","resetState","state","type","REQUEST_POST","START","FINISH","ERROR","requestPost","payload","receivePost","dispatch","services","catch","error","REQUEST_USER","requestUser","receiveUser","map","./home.svg","./plus.svg","./refresh.svg","./stop.svg","webpackContext","req","id","webpackContextResolve","e","code","keys","Object","module","exports","p","Boolean","window","location","hostname","match","appReducer","combineReducers","arguments","length","undefined","action","objectSpread","defineProperty","users","nextPostId","ids","missedIndex","findIndex","index","ControlPanelContainer","connect","ownProps","loadPost","resetPosts","props","nextId","metadata","className","image","callback","react_default","a","createElement","button","button_Button","PostDetailContainer","author","loadUser","_ref","useEffect","post_Post","comment_list_CommentList","PostListContainer","loadNext","loadAuthor","receiveAuthor","values","post_preview_PostPreview","assign","key","App","selectedPostId","params","master_panel_MasterPanel","Author","_ref$author","entries","name","email","error_message_ErrorMessage","message","Button","_ref$className","onClick","src","console","log","require","getImage","alt","Comment","author_Author","CommentList","comment_Comment","ErrorMessage","MasterPanel","_ref$post","title","body","PostPreview","NavLink","exact","to","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","loggerMiddleware","createLogger","persistedState","serializedState","localStorage","getItem","JSON","parse","loadState","store","createStore","applyMiddleware","thunkMiddleware","subscribe","stringify","setItem","saveState","getState","ReactDOM","render","react_redux_es","BrowserRouter","basename","process","Fragment","Route","path","Redirect","app_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1865f4b.chunk.js","sourcesContent":["export * from './state';\nexport * from './post';\nexport * from './user';\nexport * from './comment';","import fetch from 'isomorphic-fetch';\n\nconst url = 'https://jsonplaceholder.typicode.com';\n\nexport const Post = {\n\n  posts: [],\n  loaded: false,\n  post: (postId) => {\n    return new Promise((resolve, reject) => {\n      fetch(`${url}/posts/${postId}`)\n        .then(response => {\n          response.ok ? resolve(response.json()) : reject(new Error(`Request status: ${response.status} :(`));\n        });\n    });\n  },\n  user: (userId) => {\n    return new Promise((resolve, reject) => {\n      fetch(`${url}/users/${userId}`)\n        .then(response => {\n          response.ok ? resolve(response.json()) : reject(new Error(`Request status: ${response.status} :(`));\n        });\n    });\n  }\n}","export * from './post';","export * from './comment.action';","export const RESET_STATE = {\n  POSTS: \"RESET_STATE_POSTS\"\n}\n\nexport function resetState(state) {\n  return {\n    type: RESET_STATE[state]\n  }\n}","export * from './state.action';","import * as services from './../../services';\n\nexport const REQUEST_POST = {\n  START: \"REQUEST_POST_START\",\n  FINISH: \"REQUEST_POST_FINISH\",\n  ERROR: \"REQUEST_POST_ERROR\"\n}\n\nexport function requestPost(state, payload) {\n  return {\n    type: REQUEST_POST[state],\n    payload\n  }\n}\n\nexport function receivePost(postId) {\n  return function (dispatch) {\n    dispatch(requestPost('START'));\n    services.Post.post(postId)\n      .then(post => {\n        dispatch(requestPost('FINISH', { post }))\n      })\n      .catch(error => {\n        dispatch(requestPost('ERROR', {error}));\n      });\n  }\n}","export * from './post.action';","import * as services from './../../services';\n\nexport const REQUEST_USER = {\n  START: \"REQUEST_USER_START\",\n  FINISH: \"REQUEST_USER_FINISH\",\n  ERROR: \"REQUEST_USER_ERROR\"\n}\n\nexport function requestUser(state, payload) {\n  return {\n    type: REQUEST_USER[state],\n    payload\n  }\n}\n\nexport function receiveUser(userId) {\n  return function(dispatch) {\n    dispatch(requestUser('START'));\n    services.Post.user(userId)\n      .then(user => {\n        dispatch(requestUser('FINISH', { user }));\n      })\n      .catch(error => {\n        dispatch(requestUser('ERROR', { error }));\n      });\n  }\n}\n","export * from './user.action';","var map = {\n\t\"./home.svg\": 56,\n\t\"./plus.svg\": 57,\n\t\"./refresh.svg\": 58,\n\t\"./stop.svg\": 59\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 55;","module.exports = __webpack_public_path__ + \"static/media/home.be1885fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.5338dd10.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh.1646917e.svg\";","module.exports = __webpack_public_path__ + \"static/media/stop.5a80db53.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport { RESET_STATE } from './../../actions';\n// import { posts, users } from './../../reducers';\n\nimport { posts } from './../../reducers/posts/posts.reducer';\nimport { users } from './../../reducers/users/users.reducer';\n\nconst appReducer = combineReducers({\n  posts,\n  users\n});\n\n// export const root = combineReducers({\n//   posts,\n//   users\n// });\n\nexport const root = (state, action) => {\n  switch (action.type) {\n    case RESET_STATE.POSTS:\n      state  = undefined;\n    break;\n  }\n  return appReducer(state, action)\n}","import { REQUEST_POST } from './../../actions';\n\nexport const posts = (state = {}, action) => {\n  switch (action.type) {\n    case REQUEST_POST.FINISH: \n      const post = action.payload.post;\n      return {\n        ...state, \n        [post.id]: {...post} // need some refactoring...\n      }\n    case REQUEST_POST.ERROR:\n      return {\n        ...state\n      }\n    case REQUEST_POST.START:\n    default:\n      return {\n        ...state\n      }\n  }\n}","import { REQUEST_USER } from './../../actions';\n\nexport const users = (state = {}, action) => {\n  switch (action.type) {\n    case REQUEST_USER.FINISH:\n      const user = action.payload.user;\n      return {\n        ...state,\n        [user.id]: {...user}\n      }\n    case REQUEST_USER.ERROR: \n      return {\n        ...state\n      }\n    case REQUEST_USER.START:\n    default:\n      return {\n        ...state\n      }\n  }\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { receivePost, resetState } from '../../actions';\nimport { Button, MoreButton, ResetButton } from '../../components';\nimport './control-panel.css';\n\n\nconst ControlPanel = (props) => {\n  const {posts, loadPost, resetPosts} = props;\n  const nextId = nextPostId(posts);\n\n  const metadata = [\n    {\n      className: 'home-button',\n      image: 'home',\n      callback: () => {\n        \n      }\n    },\n    {\n      className: 'more-button',\n      image: 'plus',\n      callback: () => {loadPost(nextId)}\n    },\n    {\n      className: 'refresh-button',\n      image: 'refresh',\n      callback: () => {\n        \n      }\n    },\n    {\n      className: 'reset-button',\n      image: 'stop',\n      callback: resetPosts\n    }\n  ];\n\n  return (\n    <div className=\"control-panel\">\n      { metadata.map(button => <Button {...button} />) }\n    </div>\n  )\n}\n\nexport const nextPostId = (posts) => {\n  const ids = Object.keys(posts);\n\n  if (!ids.length) {\n    return 1;\n  }\n\n  const missedIndex = ids.findIndex((id, index) => +id !== index + 1); \n\n  if (missedIndex < 0) {\n    return ids.length + 1;\n  } else {\n    return missedIndex + 1;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    posts: state.posts,\n    ...ownProps\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadPost: postId => dispatch(receivePost(postId)),\n    resetPosts: () => dispatch(resetState('POSTS'))\n  }\n}\n\nexport const ControlPanelContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ControlPanel)","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Post, CommentList } from './../../components';\nimport './post-detail.css';\nimport { receivePost, receiveUser } from './../../actions';\n\nconst PostDetail = ({className, postId, post, author, loadPost, loadUser}) => {\n  useEffect(() => {\n    if (postId && !post) {\n      loadPost(postId);\n    }\n\n    if (post && !author) {\n      loadUser(post.userId);\n    }\n  });\n\n  if (postId) {\n    return (\n      (<div className={`post-detail ${className}`}>\n        <Post post={post} author={author} />\n        <CommentList />\n      </div>)\n    );\n  } else {\n    return (\n      <div className={`post-detail ${className}`}>\n        Did not selected any post...\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const postId = ownProps.postId;\n  const post = state.posts[postId] ? state.posts[postId] : undefined;\n  const userId = post ? post.userId : undefined;\n  const author = state.users[userId] ? state.users[userId] : undefined;\n\n  return {\n    post,\n    author\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    loadPost: (postId) => dispatch(receivePost(postId)),\n    loadUser: (userId) => dispatch(receiveUser(userId))\n  }\n}\n\nexport const PostDetailContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostDetail)","import React from 'react';\nimport { connect } from 'react-redux';\nimport { resetState, receivePost, receiveAuthor } from './../../actions';\nimport { PostPreview, MoreButton, ResetButton } from './../../components';\nimport './post-list.css';\n\nconst PostList = ({posts, loadNext, className, resetPosts}) => {\n  const nextId = nextPostId(posts);\n  \n  return (\n    <div className={`post-list ${className}`}>\n      { Object.values(posts).map(((post, index) => <PostPreview key={index} {...post} />)) }\n    </div>\n  )\n}\n\nexport const nextPostId = (posts) => {\n  const ids = Object.keys(posts);\n\n  if (!ids.length) {\n    return 1;\n  }\n\n  const missedIndex = ids.findIndex((id, index) => +id !== index + 1); \n\n  if (missedIndex < 0) {\n    return ids.length + 1;\n  } else {\n    return missedIndex + 1;\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    posts: state.posts,\n    ...ownProps\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadNext: postId => dispatch(receivePost(postId)),\n    loadAuthor: () => dispatch(receiveAuthor()),\n    resetPosts: () => dispatch(resetState('POSTS'))\n  }\n}\n\nexport const PostListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostList);","import React from 'react';\nimport { MasterPanel } from '../../components';\nimport { PostDetailContainer } from '../../containers';\nimport './app.css';\n\nexport const App = ({match}) => {\n  const selectedPostId = match.params.postId;\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__title\">\n        Posts app\n      </div>\n      <MasterPanel />\n      <PostDetailContainer className=\"app__post-detail\" postId={selectedPostId || ''} />\n    </div>\n  );\n}","import React, {useEffect} from 'react';\nimport { ErrorMessage } from '../../components';\nimport './author.css';\n\nexport const Author = ({className, author = {}}) => {\n  if (Object.entries(author).length) {\n    return (\n      <div className={`author ${className}`}>\n        <span className=\"author-name\">{author.name}</span> / <span className=\"author-email\">{author.email}</span>\n      </div>\n    );\n  } else {\n    return (\n      <ErrorMessage message=\"Author does not loaded for unknown reasons... w(°ｏ°)w\" />\n    )\n  }\n\n}","import React from 'react';\nimport './button.css';\n\n\nconst imagePath = '../../assets/svg';\n\nexport const Button = ({image, callback, className = \"\"}) => {\n  const getImage = (image) => {\n    console.log(\"image log:\", image);\n    try {\n      return require(`../../assets/svg/${image}.svg`);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div className={`button ${className}`} onClick={callback}>\n      <img className=\"button__img\" src={getImage(image)} alt=\"Add more\"/>\n    </div>\n  )\n}","import React from 'react'; \nimport { Author } from './../../components';\nimport './comment.css'; \n\nexport const Comment = () => {\n  return (\n    <div className=\"comment\">\n      <div className=\"comment-title\">REPELLAT PROVIDENT OCCAECATI</div>\n      <div className=\"comment-body\">quas totam nostrum rerum est autem sunt rem eveniet architecto</div>\n      <Author className=\"comment_author\" />\n    </div>\n  );\n}","import React from 'react';\nimport { Comment } from './../../components';\nimport './comment-list.css';\n\nexport const CommentList = () => {\n  return (\n    <div className=\"comment-list\">\n      <Comment />\n      <Comment />\n      <Comment />\n    </div>\n  );\n}","import React from 'react';\nimport './error-message.css';\n\nexport const ErrorMessage = ({className, message}) => {\n  return (\n    <div className={`error-message ${className}`}>\n      {message}\n    </div>\n  );\n}","import React from 'react';\nimport './master-panel.css';\nimport { ControlPanelContainer, PostListContainer } from '../../containers';\n\nexport const MasterPanel = () => {\n  return (\n    <div className=\"master-panel\">\n      <ControlPanelContainer />\n      <PostListContainer />\n    </div>\n  )\n}","import React from 'react';\nimport { Author } from './../../components';\nimport './post.css';\n\nexport const Post = ({post = {}, author = {}}) => {\n  return (\n    <div className=\"post\">\n      <h3 className=\"post-title\">{post.title}</h3>\n      <p className=\"post-body\">{post.body}</p>\n      <Author className=\"post_author\" author={author} />\n    </div>\n  );\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './post-preview.css'\n\nexport const PostPreview = ({id, title, body}) => {\n  return (\n    <NavLink\n      exact\n      to={`/posts/${id}`}\n      className=\"post-preview\">\n      <h3 className=\"post-preview-title\">{title}</h3>\n      <p className=\"post-preview-body\">{body}</p>\n    </NavLink>\n  );\n}","import thunkMiddleware from 'redux-thunk';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { root } from './reducers';\nimport { createLogger } from 'redux-logger';\nimport { Root } from './components';\nimport { loadState, saveState } from './localStorage';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst loggerMiddleware = createLogger();\nconst persistedState = loadState();\n\nconst store = createStore(\n  root,\n  persistedState,\n  composeEnhancers(\n    applyMiddleware(\n      thunkMiddleware,\n      loggerMiddleware\n    )\n  )\n);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(<Root store={store} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (error) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch (error) {\n    //\n  }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport { App } from './../../components';\nimport './root.css';\n\nexport const Root = ({store}) => {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <>\n          <Route exact path=\"/\" render={() => <Redirect to=\"/posts\" />} />\n          <Route exact path=\"/posts\" render={(props) => <App {...props} />} />\n          <Route exact path=\"/posts/:postId\" render={(props) => <App {...props} />} />\n        </>\n      </BrowserRouter>\n    </Provider>\n  )\n}"],"sourceRoot":""}